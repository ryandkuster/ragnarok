manifest {
    version = getGitVersion()
    name = 'ragnarok'
    description = 'A nextflow-implemented pipeline for rapid genome annotation using multiple lines of evidence'
    homePage = 'https://github.com/ryandkuster/ragnarok'
    license = 'MIT'
}

params {
    skip_qc            = true
    skip_trim          = true
    minimum_length     = 50
    perform_masking    = false
    masking_threshold  = false
    skip_st            = false
    skip_hx            = false
    nlrs               = false
    ill                = false
    iso                = false
    lineage            = "https://zenodo.org/records/10836346/files/land_plant_v0.3_a_0080.h5"
    subseq_len         = 64152
    contam             = "insecta,fungi,bacteria"
    lo_genome          = false
    lo_gff             = false
    busco_db           = "embryophyta_odb12"
    final_prefix       = "ragnarok"
}

includeConfig "conf/containers.config"

profiles {
    slurm {
        includeConfig "conf/slurm.config"
        workDir = "${params.publish_dir}/work/"

        executor {
            queueSize = 50
            submitRateLimit = '10/1min'
        }

        singularity {
            enabled = true
            cacheDir = "${SCRATCHDIR}/singularity/"
            autoMounts = true
            pullTimeout = "3h"
        }

        process {
            publish_dir = "${params.publish_dir}/publish/"
            executor = 'slurm'
        }
        includeConfig "conf/reporting.config"
    }

    local {
        // create default for publish_dir if not input
        includeConfig "conf/local.config"
        workDir = "${params.publish_dir}/work/"

        singularity {
            enabled = true
            cacheDir = "${SCRATCHDIR}/singularity/"
            autoMounts = true
            pullTimeout = "3h"
        }

        process {
            publish_dir = "${params.publish_dir}/publish/"
        }
        includeConfig "conf/reporting.config"
    }

}

def getGitVersion() {
    try {
        def gitTag = ['git', 'describe', '--tags', '--always'].execute().text.trim()
        return gitTag ?: 'dev'
    } catch (Exception e) {
        return 'unknown'
    }
}
